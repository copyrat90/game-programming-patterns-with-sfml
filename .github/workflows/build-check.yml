# Copyright (c) 2020-2021 Luca Cappa
# Released under the term specified in file https://github.com/lukka/CppBuildTasks-Validation/blob/v10/README.md
# SPDX short identifier: MIT
#
# The peculiarity of this workflow is that assumes vcpkg is NOT stored as a submodule of this repository.
# This workflow does the following:
# - Restores vcpkg artifacts from cache.
# - Using the provided Git commit id, sets up vcpkg if needed, then run CMake with CMakePreset.json using a configuration
#   that leverages the vcpkg's toolchain file. This will automatically run vcpkg to install dependencies
#   described by the vcpkg.json manifest file. It will be a no-op if those are restored from cache.
# - Finally builds the sources with Ninja.

name: build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            vcpkgCommitId: '66c39e113a348a6ae80419fae5a629b951b00f1a'
          - os: ubuntu-latest
            vcpkgCommitId: '66c39e113a348a6ae80419fae5a629b951b00f1a'
          - os: macos-latest
            vcpkgCommitId: '66c39e113a348a6ae80419fae5a629b951b00f1a'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libx11-dev libxrandr-dev libxi-dev libudev-dev libgl1-mesa-dev

      - uses: lukka/get-cmake@latest
      - name: Dump the content of $RUNNER_TEMP
        run: find $RUNNER_TEMP
        shell: bash
      - name: Dump the content of $RUNNER_WORKSPACE
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          # This specifies the location of vcpkg, where it is going to be restored from cache, or create from scratch.
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          # The Git commit id of vcpkg to be checked out. This is only needed because we are not using a submodule.
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          # The vcpkg.json file, which will be part of cache key computation.
          vcpkgJsonGlob: '${{ github.workspace }}/vcpkg.json'

      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}'"

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/.run-vcpkg/CMakeLists.txt'
          configurePreset: ninja-vcpkg
          buildPreset: ninja-vcpkg
